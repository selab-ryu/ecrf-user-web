package ecrf.user.crf.command.render.form;import com.liferay.portal.kernel.log.Log;import com.liferay.portal.kernel.log.LogFactoryUtil;import com.liferay.portal.kernel.portlet.bridges.mvc.MVCRenderCommand;import com.liferay.portal.kernel.util.ParamUtil;import com.sx.icecap.service.DataTypeLocalService;import javax.portlet.PortletException;import javax.portlet.RenderRequest;import javax.portlet.RenderResponse;import org.osgi.service.component.annotations.Component;import org.osgi.service.component.annotations.Reference;import ecrf.user.constants.ECRFUserJspPaths;import ecrf.user.constants.ECRFUserMVCCommand;import ecrf.user.constants.ECRFUserPortletKeys;import ecrf.user.constants.attribute.ECRFUserCRFDataAttributes;import ecrf.user.model.CRF;import ecrf.user.service.CRFLocalService;@Component(	    immediate = true,	    property = {	        "javax.portlet.name=" + ECRFUserPortletKeys.CRF,	        "mvc.command.name=" + ECRFUserMVCCommand.RENDER_CRF_FORM_PDF_DOWNLOAD,	    },	    service = MVCRenderCommand.class	)public class PDFDownloadRenderCommand implements MVCRenderCommand{    @Override    public String render(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException {        _log.info("Render PDF Download");                long crfId = ParamUtil.getLong(renderRequest, ECRFUserCRFDataAttributes.CRF_ID, 0);        long dataTypeId = _crfLocalService.getDataTypeId(crfId);                        _log.info("datatype id : " + dataTypeId);                return ECRFUserJspPaths.JSP_PDF_DOWNLOAD;    }        private Log _log = LogFactoryUtil.getLog(PDFDownloadRenderCommand.class);        @Reference    private CRFLocalService _crfLocalService;        @Reference	DataTypeLocalService _dataTypeLocalService;}